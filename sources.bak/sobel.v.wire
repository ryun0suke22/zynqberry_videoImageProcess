`timescale 1ns / 1ps

module sobel
(
 CLK, RESET,
 D02IN, D01IN, D00IN, // Upper Line
 D12IN, D11IN, D10IN, // Middle Line
 D22IN, D21IN, D20IN, // Under Line
 Dout
);

 input CLK, RESET;
 input [23:0] D02IN,D01IN,D00IN;
 input [23:0] D12IN,D11IN,D10IN;
 input [23:0] D22IN,D21IN,D20IN;
 output [23:0] Dout;
 reg signed [11:0] tmp_x, tmp_y;
 reg signed [13:0] tmp;

 ////Preprocess for b1inarize
 wire [8:0] gray00 = (D00IN[23:16]);
 wire [8:0] gray01 = (D01IN[23:16]);
 wire [8:0] gray02 = (D02IN[23:16]);
 wire [8:0] gray10 = (D10IN[23:16]);
 wire [8:0] gray11 = (D11IN[23:16]);
 wire [8:0] gray12 = (D12IN[23:16]);
 wire [8:0] gray20 = (D20IN[23:16]);
 wire [8:0] gray21 = (D21IN[23:16]);
 wire [8:0] gray22 = (D22IN[23:16]);

 always @( posedge CLK ) begin
   if(~RESET) begin tmp_x <= 0; tmp_y <= 0; end
   else begin
     tmp<=(gray00-gray02+(gray10<<1)-(gray12<<1)+gray20-gray22);
     //tmp_x<=(gray00-gray02+(gray10<<1)-(gray12<<1)+gray20-gray22);
     //tmp_y<=(gray20+(gray21<<1)+gray22-gray00-(gray01<<1)-gray02);
        end
 end

 //always @( posedge CLK ) begin
 //  if(~RESET) begin tmp <= 0; end
 //  else begin
 //    tmp<=tmp_x+tmp_y;
 //       end
 //end

//assign tmp = tmp_x + tmp_y;
assign Dout = (tmp>8'd255) ? 24'hffffff: (tmp<8'd0) ? 24'h000000: {tmp[7:0],tmp[7:0],tmp[7:0]};

 endmodule
